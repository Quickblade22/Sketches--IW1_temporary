Bootstrap: docker
From: ubuntu:22.04

%post
    # Set to avoid user input blocking (e.g., timezone selection)
    export DEBIAN_FRONTEND=noninteractive
    
    # Update package list and install essential tools
    apt-get update && apt-get install -y \
        build-essential \
        cmake \
        git \
        wget \
        pkg-config \
        python3 \
        python3-pip \
        python3-venv
    
    # Install SDL2 and other dependencies
    apt-get install -y \
        libsdl2-dev \
        libsdl2-image-dev \
        libsdl2-ttf-dev \
        libsdl2-gfx-dev \
        libboost-all-dev
    
    # Install ALE dependencies
    apt-get install -y \
        libavutil-dev \
        libavformat-dev \
        libavcodec-dev \
        libswscale-dev \
        libswresample-dev

    # Clone and build ALE
    cd /opt
    git clone https://github.com/mgbellemare/Arcade-Learning-Environment.git
    cd Arcade-Learning-Environment
    mkdir build && cd build
    cmake ../ -DCMAKE_BUILD_TYPE=Release -DUSE_SDL=ON
    cmake --build . --target install

    # Clone and build your project
    cd /opt
    git clone https://github.com/Quickblade22/Sketches--IW1_temporary.git
    cd Sketches--IW1_temporary/src
    
    # Build the project
    make clean
    make

    # Install Python dependencies for the runner script
    pip3 install psutil

    # Make sure python3 is the default python
    ln -sf /usr/bin/python3 /usr/bin/python

%environment
    export LC_ALL=C
    # Set ALE location if your project needs it
    export ALE_DIR=/opt/Arcade-Learning-Environment
    # Add to library path
    export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}
    # Add Python to PATH (though it should already be there)
    export PATH=/usr/bin:${PATH}

%runscript
    echo "Container with ALE, rollout-iw project, and Python support ready"
    echo "Project is located at: /opt/Sketches--IW1/rollout-iw"
    echo "Python 3 and psutil are installed"
    echo "Use --bind to mount your host project directory if needed for development"

%labels
    Author YourName
    Version 1.0
    Description "Container for rollout-iw project with ALE and Python support"

%help
    This container contains the Arcade Learning Environment, rollout-iw project, and Python 3.
    To build and run your project:
    1. Shell into container: apptainer shell --bind /host/path/to/your/code:/workspace mycontainer.sif
    2. Navigate to /opt/Sketches--IW1/rollout-iw or /workspace
    3. Run make and your executable
    
    To run the Python script:
    python3 /opt/Sketches--IW1/rollout-iw/running.py [arguments]